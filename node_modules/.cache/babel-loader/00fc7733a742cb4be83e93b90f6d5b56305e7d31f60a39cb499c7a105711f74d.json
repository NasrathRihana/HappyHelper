{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bashc\\\\OneDrive\\\\Documents\\\\Kaar Documents\\\\HappyHelperFinal\\\\src\\\\components\\\\Chat\\\\ChatMessages\\\\ChatMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"./ChatMessages.css\";\nimport useChatMessages from \"./utils/useChatMessages\";\nimport useReceiverDisplayName from \"./utils/useReceiverDisplayName\";\nimport MessageForm from \"./MessageForm\";\nimport MessageList from \"./MessageList\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Grid } from \"@mui/material\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatMessages() {\n  _s();\n  // Set up local state for message text\n  const [messageText, setMessageText] = useState(\"\");\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  var listHeight = window.innerHeight - 64;\n  var chatHeight = window.innerHeight - 64 - 64;\n  if (isMobile) {\n    listHeight = listHeight - 14;\n    chatHeight = chatHeight - 14;\n  } else {\n    listHeight = listHeight - 24;\n    chatHeight = chatHeight - 24;\n  }\n\n  // Get current user from Redux store\n  const currentUser = useSelector(state => state.auth.user);\n\n  // Get chat ID from URL parameter\n  const {\n    id\n  } = useParams();\n\n  // Get messages and sendMessage function using custom hook\n  const {\n    messages,\n    sendMessage\n  } = useChatMessages(currentUser.uid, id);\n\n  // Get display name of receiver using custom hook\n  const receiverDisplayName = useReceiverDisplayName(id);\n\n  // Handle sending a message\n  const handleSendMessage = e => {\n    e.preventDefault();\n    sendMessage(messageText);\n    setMessageText(\"\");\n  };\n\n  // Render chat interface\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"chat-container\",\n    maxWidth: \"600px\",\n    maxHeight: listHeight,\n    minHeight: listHeight,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      fontWeight: \"bold\",\n      sx: {\n        textAlign: \"center\"\n      },\n      children: receiverDisplayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      maxHeight: chatHeight,\n      minHeight: chatHeight,\n      children: /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        currentUserUid: currentUser.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-end\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MessageForm, {\n        messageText: messageText,\n        setMessageText: setMessageText,\n        handleSendMessage: handleSendMessage,\n        receiverDisplayName: receiverDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n// Export ChatMessages component as default\n_s(ChatMessages, \"0KjqrvDdzvS2v6+B0UH0+yFgCLg=\", false, function () {\n  return [useTheme, useMediaQuery, useSelector, useParams, useChatMessages, useReceiverDisplayName];\n});\n_c = ChatMessages;\nexport default ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["React","useState","useParams","useSelector","useChatMessages","useReceiverDisplayName","MessageForm","MessageList","Container","Typography","Box","Grid","useTheme","useMediaQuery","jsxDEV","_jsxDEV","ChatMessages","_s","messageText","setMessageText","theme","isMobile","breakpoints","down","listHeight","window","innerHeight","chatHeight","currentUser","state","auth","user","id","messages","sendMessage","uid","receiverDisplayName","handleSendMessage","e","preventDefault","className","maxWidth","maxHeight","minHeight","children","fontWeight","sx","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","container","direction","currentUserUid","display","flexDirection","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/Chat/ChatMessages/ChatMessages.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./ChatMessages.css\";\r\nimport useChatMessages from \"./utils/useChatMessages\";\r\nimport useReceiverDisplayName from \"./utils/useReceiverDisplayName\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MessageList from \"./MessageList\";\r\nimport { Container, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useTheme, useMediaQuery } from \"@mui/material\";\r\n\r\nfunction ChatMessages() {\r\n  // Set up local state for message text\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  var listHeight = window.innerHeight - 64;\r\n  var chatHeight = window.innerHeight - 64 - 64;\r\n  if (isMobile) {\r\n    listHeight = listHeight - 14;\r\n    chatHeight = chatHeight - 14;\r\n  } else {\r\n    listHeight = listHeight - 24;\r\n    chatHeight = chatHeight - 24;\r\n  }\r\n\r\n  // Get current user from Redux store\r\n  const currentUser = useSelector((state) => state.auth.user);\r\n\r\n  // Get chat ID from URL parameter\r\n  const { id } = useParams();\r\n\r\n  // Get messages and sendMessage function using custom hook\r\n  const { messages, sendMessage } = useChatMessages(currentUser.uid, id);\r\n\r\n  // Get display name of receiver using custom hook\r\n  const receiverDisplayName = useReceiverDisplayName(id);\r\n\r\n  // Handle sending a message\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    sendMessage(messageText);\r\n    setMessageText(\"\");\r\n  };\r\n\r\n  // Render chat interface\r\n  return (\r\n    <Container className=\"chat-container\" maxWidth=\"600px\" maxHeight={listHeight} minHeight={listHeight}>\r\n      {/* Display receiver display name in chat title */}\r\n      <Typography fontWeight=\"bold\" sx={{ textAlign: \"center\" }}>\r\n        {receiverDisplayName}\r\n      </Typography>\r\n      <Grid container direction=\"column\" maxHeight={chatHeight} minHeight={chatHeight}>\r\n        <MessageList messages={messages} currentUserUid={currentUser.uid} />\r\n      </Grid>\r\n      {/* Display form for sending messages */}\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-end\" }}>\r\n        <MessageForm\r\n          messageText={messageText}\r\n          setMessageText={setMessageText}\r\n          handleSendMessage={handleSendMessage}\r\n          receiverDisplayName={receiverDisplayName}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Export ChatMessages component as default\r\nexport default ChatMessages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}