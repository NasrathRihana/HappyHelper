{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bashc\\\\OneDrive\\\\Documents\\\\Kaar Documents\\\\HappyHelperFinal\\\\src\\\\components\\\\SelfAssessment\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport questions from \"./questions.json\";\nimport { Typography, Button, Box, FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport ScoreModal from \"./ScoreModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledLabel = styled(\"label\")({\n  display: \"block\"\n});\n_c = StyledLabel;\nfunction SelfAssessment() {\n  _s();\n  const initialSelectedAnswers = questions.reduce((acc, question) => ({\n    ...acc,\n    [question.id]: null\n  }), {});\n  const [score, setScore] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState(initialSelectedAnswers);\n  const [modalOpen, setModalOpen] = useState(false);\n  function handleOptionSelect(questionId, optionValue) {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: Number(optionValue)\n    });\n  }\n  function openModal() {\n    calculateScore();\n    setModalOpen(true);\n  }\n  function closeModal() {\n    setModalOpen(false);\n  }\n  function calculateScore() {\n    let newScore = 0;\n    for (let i = 0; i < questions.length; i++) {\n      const question = questions[i];\n      const selectedOption = selectedAnswers[question.id] && question.options.find(option => option.value === selectedAnswers[question.id]);\n      if (selectedOption) {\n        newScore += selectedOption.value;\n      }\n    }\n    setScore(newScore);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      maxWidth: \"600px\",\n      margin: \"0 auto\"\n    },\n    children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      sx: {\n        mt: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [index + 1, \". \", question.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": index + 1 + \". \" + question.text,\n        name: question.id,\n        value: selectedAnswers[question.id],\n        onChange: event => handleOptionSelect(question.id, event.target.value),\n        children: question.options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option.value,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(StyledLabel, {\n            htmlFor: `${question.id}_${option.value}`,\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }, this)\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: openModal,\n      sx: {\n        mt: 2,\n        maxWidth: \"200px\",\n        alignSelf: \"center\"\n      },\n      children: \"Calculate Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mt: 2,\n        alignSelf: \"center\"\n      },\n      children: [\"Your score: \", score / 4]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreModal, {\n      open: modalOpen,\n      score: score,\n      handleClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(SelfAssessment, \"zijVj2AD381jrHqQui5UDTURLIk=\");\n_c2 = SelfAssessment;\nexport default SelfAssessment;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledLabel\");\n$RefreshReg$(_c2, \"SelfAssessment\");","map":{"version":3,"names":["React","useState","questions","Typography","Button","Box","FormControl","RadioGroup","FormControlLabel","Radio","styled","ScoreModal","jsxDEV","_jsxDEV","StyledLabel","display","_c","SelfAssessment","_s","initialSelectedAnswers","reduce","acc","question","id","score","setScore","selectedAnswers","setSelectedAnswers","modalOpen","setModalOpen","handleOptionSelect","questionId","optionValue","Number","openModal","calculateScore","closeModal","newScore","i","length","selectedOption","options","find","option","value","sx","flexDirection","maxWidth","margin","children","map","index","component","mt","variant","text","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","event","target","control","label","htmlFor","onClick","alignSelf","open","handleClose","_c2","$RefreshReg$"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/SelfAssessment/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport questions from \"./questions.json\";\r\nimport { Typography, Button, Box, FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ScoreModal from \"./ScoreModal\";\r\nconst StyledLabel = styled(\"label\")({\r\n  display: \"block\",\r\n});\r\n\r\nfunction SelfAssessment() {\r\n  const initialSelectedAnswers = questions.reduce((acc, question) => ({ ...acc, [question.id]: null }), {});\r\n  const [score, setScore] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState(initialSelectedAnswers);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  function handleOptionSelect(questionId, optionValue) {\r\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: Number(optionValue) });\r\n  }\r\n\r\n  function openModal() {\r\n    calculateScore();\r\n    setModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setModalOpen(false);\r\n  }\r\n\r\n  function calculateScore() {\r\n    let newScore = 0;\r\n    for (let i = 0; i < questions.length; i++) {\r\n      const question = questions[i];\r\n      const selectedOption = selectedAnswers[question.id] && question.options.find((option) => option.value === selectedAnswers[question.id]);\r\n      if (selectedOption) {\r\n        newScore += selectedOption.value;\r\n      }\r\n    }\r\n    setScore(newScore);\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"600px\", margin: \"0 auto\" }}>\r\n      {questions.map((question, index) => (\r\n        <FormControl key={question.id} component=\"fieldset\" sx={{ mt: 6 }}>\r\n          <Typography variant=\"body1\">\r\n            {index + 1}. {question.text}\r\n          </Typography>\r\n          <RadioGroup\r\n            aria-label={index + 1 + \". \" + question.text}\r\n            name={question.id}\r\n            value={selectedAnswers[question.id]}\r\n            onChange={(event) => handleOptionSelect(question.id, event.target.value)}\r\n          >\r\n            {question.options.map((option) => (\r\n              <FormControlLabel\r\n                key={option.value}\r\n                value={option.value}\r\n                control={<Radio />}\r\n                label={<StyledLabel htmlFor={`${question.id}_${option.value}`}>{option.text}</StyledLabel>}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n      ))}\r\n      <Button variant=\"contained\" onClick={openModal} sx={{ mt: 2, maxWidth: \"200px\", alignSelf: \"center\" }}>\r\n        Calculate Score\r\n      </Button>\r\n      <Typography variant=\"body1\" sx={{ mt: 2, alignSelf: \"center\" }}>\r\n        Your score: {score / 4}\r\n      </Typography>\r\n      <ScoreModal open={modalOpen} score={score} handleClose={closeModal} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SelfAssessment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}