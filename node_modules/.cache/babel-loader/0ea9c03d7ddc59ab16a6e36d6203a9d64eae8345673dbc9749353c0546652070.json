{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bashc\\\\OneDrive\\\\Documents\\\\Kaar Documents\\\\HappyHelperFinal\\\\src\\\\utils\\\\NotificationPermissionModal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../utils/firebase\";\nimport { Modal, Box, Typography, Button } from \"@mui/material\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport lightTheme from \"../theme\";\nimport darkTheme from \"../theme/darkTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationPermissionModal = () => {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const [open, setOpen] = useState(false);\n  const darkMode = useSelector(state => state.darkMode.darkMode);\n\n  //const [token, setToken] = useState(null);\n  const [remindLater, setRemindLater] = useState(false);\n\n  // Save the token to Firestore\n  async function saveTokenToFirestore(token) {\n    try {\n      const userId = user.uid;\n      const userRef = firebase.firestore().collection(\"users\").doc(userId);\n      await userRef.update({\n        notificationToken: token,\n        pushNotifications: true\n      });\n      //setToken(token);\n      console.log(\"Token saved to Firestore.\");\n    } catch (error) {\n      console.error(\"Error saving token to Firestore:\", error);\n      cleanupTokenAndPermissions(token);\n    }\n  }\n\n  // Clean up the token and revoke notification permissions\n  function cleanupTokenAndPermissions(token) {\n    const messaging = firebase.messaging();\n    messaging.deleteToken(token).then(() => {\n      console.log(\"Token deleted.\");\n    }).catch(error => {\n      console.error(\"Error deleting token:\", error);\n    });\n\n    // Revoke notification permissions if supported by the browser\n    if (typeof Notification.revoke === \"function\") {\n      Notification.revoke().then(() => {\n        console.log(\"Notification permissions revoked.\");\n      }).catch(error => {\n        console.error(\"Error revoking notification permissions:\", error);\n      });\n    } else {\n      console.warn(\"Notification permissions cannot be revoked programmatically.\");\n    }\n  }\n\n  // Get the timestamp for the reminder\n  async function getReminderTimestamp() {\n    const userRef = firebase.firestore().collection(\"users\").doc(user.uid);\n    const doc = await userRef.get();\n    return doc.exists && doc.data().hasOwnProperty(\"remindNotification\") ? doc.data().remindNotification.toDate() : null;\n  }\n  function savePermissionStatus(status) {\n    sessionStorage.setItem(\"notificationPermission\", status);\n  }\n\n  // Check notification permissions and reminder timestamp\n  useEffect(() => {\n    // Check if the user has granted notification permissions\n    const permission = sessionStorage.getItem(\"notificationPermission\");\n    if (permission !== \"denied\" && permission !== \"granted\") {\n      const checkPermissionAndTimestamp = async () => {\n        if (user) {\n          const remindTimestamp = await getReminderTimestamp();\n          if (!remindTimestamp || new Date() > remindTimestamp) {\n            setOpen(true);\n            const timer = setTimeout(() => {\n              setOpen(false);\n              console.warn(\"Notification permission not granted.\");\n            }, 15000);\n            return () => clearTimeout(timer);\n          }\n        } else {\n          setOpen(false);\n        }\n      };\n      checkPermissionAndTimestamp();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  // Handle \"Allow\" button click\n  const handleAllowClick = async () => {\n    setOpen(false);\n    const permission = await Notification.requestPermission();\n    if (permission === \"granted\") {\n      const messaging = firebase.messaging();\n      const token = await messaging.getToken({\n        vapidKey: \"BLJxHQPsdXGM_1xpsoA2xq6pgChoPBSGjIzzrwbGHlkV7R-R7k6dBAVDP6JdjgjhdXOETcQnJpHwY3cFx7-mW8o\"\n      });\n      savePermissionStatus(\"granted\");\n      saveTokenToFirestore(token);\n      console.log(token);\n    } else {\n      console.warn(\"Notification permission not granted.\");\n    }\n  };\n\n  // Handle \"Decline\" button click\n  const handleDeclineClick = () => {\n    setOpen(false);\n    console.warn(\"Notification permission not granted.\");\n    savePermissionStatus(\"denied\");\n    if (remindLater) {\n      const remindTimestamp = new Date();\n      remindTimestamp.setDate(remindTimestamp.getDate() + 15);\n      const usersRef = firebase.firestore().collection(\"users\");\n      usersRef.doc(user.uid).set({\n        remindNotification: remindTimestamp\n      }, {\n        merge: true\n      }).then(() => {\n        console.log(\"Remind timestamp saved to Firestore.\");\n      }).catch(error => {\n        console.error(\"Error saving remind timestamp to Firestore:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderRadius: 4,\n        maxWidth: 400,\n        backgroundColor: darkMode ? darkTheme.palette.background.paper : lightTheme.palette.background.paper,\n        color: darkMode ? darkTheme.palette.text.primary : lightTheme.palette.text.primary\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Enable Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: \"We would like to send you notifications when you receive new messages or updates. To enable notifications, please click the Allow button below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          sx: {\n            mr: 2\n          },\n          onClick: handleDeclineClick,\n          children: \"Decline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: handleAllowClick,\n          children: \"Allow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: remindLater,\n          onChange: e => setRemindLater(e.target.checked),\n          name: \"remindLater\",\n          sx: {\n            \"&.Mui-checked\": {\n              color: \"green\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this),\n        label: \"Remind me after 15 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPermissionModal, \"UBnlJryEpfngxw6z7vdXMk/O/Wc=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = NotificationPermissionModal;\nexport default NotificationPermissionModal;\nvar _c;\n$RefreshReg$(_c, \"NotificationPermissionModal\");","map":{"version":3,"names":["useState","useEffect","useSelector","firebase","Modal","Box","Typography","Button","Checkbox","FormControlLabel","lightTheme","darkTheme","jsxDEV","_jsxDEV","NotificationPermissionModal","_s","user","state","auth","open","setOpen","darkMode","remindLater","setRemindLater","saveTokenToFirestore","token","userId","uid","userRef","firestore","collection","doc","update","notificationToken","pushNotifications","console","log","error","cleanupTokenAndPermissions","messaging","deleteToken","then","catch","Notification","revoke","warn","getReminderTimestamp","get","exists","data","hasOwnProperty","remindNotification","toDate","savePermissionStatus","status","sessionStorage","setItem","permission","getItem","checkPermissionAndTimestamp","remindTimestamp","Date","timer","setTimeout","clearTimeout","handleAllowClick","requestPermission","getToken","vapidKey","handleDeclineClick","setDate","getDate","usersRef","set","merge","children","sx","p","borderRadius","maxWidth","backgroundColor","palette","background","paper","color","text","primary","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","mt","mr","onClick","control","checked","onChange","e","target","name","label","_c","$RefreshReg$"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/utils/NotificationPermissionModal.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { Modal, Box, Typography, Button } from \"@mui/material\";\r\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport lightTheme from \"../theme\";\r\nimport darkTheme from \"../theme/darkTheme\";\r\n\r\nconst NotificationPermissionModal = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const [open, setOpen] = useState(false);\r\n  const darkMode = useSelector((state) => state.darkMode.darkMode);\r\n\r\n  //const [token, setToken] = useState(null);\r\n  const [remindLater, setRemindLater] = useState(false);\r\n\r\n  // Save the token to Firestore\r\n  async function saveTokenToFirestore(token) {\r\n    try {\r\n      const userId = user.uid;\r\n      const userRef = firebase.firestore().collection(\"users\").doc(userId);\r\n      await userRef.update({\r\n        notificationToken: token,\r\n        pushNotifications: true,\r\n      });\r\n      //setToken(token);\r\n      console.log(\"Token saved to Firestore.\");\r\n    } catch (error) {\r\n      console.error(\"Error saving token to Firestore:\", error);\r\n      cleanupTokenAndPermissions(token);\r\n    }\r\n  }\r\n\r\n  // Clean up the token and revoke notification permissions\r\n  function cleanupTokenAndPermissions(token) {\r\n    const messaging = firebase.messaging();\r\n    messaging\r\n      .deleteToken(token)\r\n      .then(() => {\r\n        console.log(\"Token deleted.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting token:\", error);\r\n      });\r\n\r\n    // Revoke notification permissions if supported by the browser\r\n    if (typeof Notification.revoke === \"function\") {\r\n      Notification.revoke()\r\n        .then(() => {\r\n          console.log(\"Notification permissions revoked.\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error revoking notification permissions:\", error);\r\n        });\r\n    } else {\r\n      console.warn(\"Notification permissions cannot be revoked programmatically.\");\r\n    }\r\n  }\r\n\r\n  // Get the timestamp for the reminder\r\n  async function getReminderTimestamp() {\r\n    const userRef = firebase.firestore().collection(\"users\").doc(user.uid);\r\n    const doc = await userRef.get();\r\n    return doc.exists && doc.data().hasOwnProperty(\"remindNotification\") ? doc.data().remindNotification.toDate() : null;\r\n  }\r\n\r\n  function savePermissionStatus(status) {\r\n    sessionStorage.setItem(\"notificationPermission\", status);\r\n  }\r\n\r\n  // Check notification permissions and reminder timestamp\r\n  useEffect(() => {\r\n    // Check if the user has granted notification permissions\r\n    const permission = sessionStorage.getItem(\"notificationPermission\");\r\n    if (permission !== \"denied\" && permission !== \"granted\") {\r\n      const checkPermissionAndTimestamp = async () => {\r\n        if (user) {\r\n          const remindTimestamp = await getReminderTimestamp();\r\n\r\n          if (!remindTimestamp || new Date() > remindTimestamp) {\r\n            setOpen(true);\r\n            const timer = setTimeout(() => {\r\n              setOpen(false);\r\n              console.warn(\"Notification permission not granted.\");\r\n            }, 15000);\r\n            return () => clearTimeout(timer);\r\n          }\r\n        } else {\r\n          setOpen(false);\r\n        }\r\n      };\r\n\r\n      checkPermissionAndTimestamp();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  // Handle \"Allow\" button click\r\n  const handleAllowClick = async () => {\r\n    setOpen(false);\r\n    const permission = await Notification.requestPermission();\r\n    if (permission === \"granted\") {\r\n      const messaging = firebase.messaging();\r\n      const token = await messaging.getToken({\r\n        vapidKey: \"BLJxHQPsdXGM_1xpsoA2xq6pgChoPBSGjIzzrwbGHlkV7R-R7k6dBAVDP6JdjgjhdXOETcQnJpHwY3cFx7-mW8o\",\r\n      });\r\n      savePermissionStatus(\"granted\");\r\n      saveTokenToFirestore(token);\r\n      console.log(token);\r\n    } else {\r\n      console.warn(\"Notification permission not granted.\");\r\n    }\r\n  };\r\n\r\n  // Handle \"Decline\" button click\r\n  const handleDeclineClick = () => {\r\n    setOpen(false);\r\n    console.warn(\"Notification permission not granted.\");\r\n    savePermissionStatus(\"denied\");\r\n\r\n    if (remindLater) {\r\n      const remindTimestamp = new Date();\r\n      remindTimestamp.setDate(remindTimestamp.getDate() + 15);\r\n\r\n      const usersRef = firebase.firestore().collection(\"users\");\r\n      usersRef\r\n        .doc(user.uid)\r\n        .set({ remindNotification: remindTimestamp }, { merge: true })\r\n        .then(() => {\r\n          console.log(\"Remind timestamp saved to Firestore.\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error saving remind timestamp to Firestore:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={open}>\r\n      <Box\r\n        sx={{\r\n          p: 2,\r\n          borderRadius: 4,\r\n          maxWidth: 400,\r\n          backgroundColor: darkMode ? darkTheme.palette.background.paper : lightTheme.palette.background.paper,\r\n          color: darkMode ? darkTheme.palette.text.primary : lightTheme.palette.text.primary,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Enable Notifications\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          We would like to send you notifications when you receive new messages or updates. To enable notifications, please click the Allow button\r\n          below.\r\n        </Typography>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\r\n          <Button variant=\"outlined\" color=\"error\" sx={{ mr: 2 }} onClick={handleDeclineClick}>\r\n            Decline\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"success\" onClick={handleAllowClick}>\r\n            Allow\r\n          </Button>\r\n        </Box>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={remindLater}\r\n              onChange={(e) => setRemindLater(e.target.checked)}\r\n              name=\"remindLater\"\r\n              sx={{\r\n                \"&.Mui-checked\": {\r\n                  color: \"green\",\r\n                },\r\n              }}\r\n            />\r\n          }\r\n          label=\"Remind me after 15 days\"\r\n        />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NotificationPermissionModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}