{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bashc\\\\OneDrive\\\\Documents\\\\Kaar Documents\\\\HappyHelperFinal\\\\src\\\\components\\\\Chatbot\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Header from \"./Header\";\nimport ConversationArea from \"./ConversationArea\";\nimport InputArea from \"./InputArea\";\nimport { Box } from \"@mui/material\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const user = useSelector(state => state.auth.user);\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  useEffect(() => {\n    document.title = \"AI Counselor\";\n  }, []);\n  const sendMessage = async () => {\n    if (message.trim() !== \"\") {\n      setConversation(prev => [...prev, {\n        role: \"user\",\n        content: message\n      }]);\n      setMessage(\"\");\n      let chatBotApi = process.env.REACT_APP_FIREBASE_CHATBOT_API_URL || \"http://localhost:4000/chatbot\";\n      try {\n        const response = await axios.post(chatBotApi, {\n          userId: user.uid,\n          message\n        });\n        console.log(response.data);\n        if (response.data.success) {\n          setConversation(prev => [...prev, {\n            role: \"assistant\",\n            content: response.data.message\n          }]);\n        } else {\n          setConversation(prev => [...prev, {\n            role: \"error\",\n            content: response.data.message\n          }]);\n        }\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      height: isSmallScreen ? window.innerHeight - 58 : window.innerHeight - 64 // 100svh - 58px --\n      ,\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflow: \"hidden\",\n      sx: {\n        backgroundColor: theme.palette.background.paper\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConversationArea, {\n        conversation: conversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Chatbot, \"4LTIFAwjAqlhSxwep3WcD2UXqng=\", false, function () {\n  return [useSelector, useTheme, useMediaQuery];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","useSelector","Header","ConversationArea","InputArea","Box","useTheme","useMediaQuery","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","message","setMessage","conversation","setConversation","user","state","auth","theme","isSmallScreen","breakpoints","down","document","title","sendMessage","trim","prev","role","content","chatBotApi","process","env","REACT_APP_FIREBASE_CHATBOT_API_URL","response","post","userId","uid","console","log","data","success","error","children","height","window","innerHeight","display","flexDirection","overflow","sx","backgroundColor","palette","background","paper","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/Chatbot/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport ConversationArea from \"./ConversationArea\";\r\nimport InputArea from \"./InputArea\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useTheme, useMediaQuery } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Chatbot() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [conversation, setConversation] = useState([]);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  useEffect(() => {\r\n    document.title = \"AI Counselor\";\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() !== \"\") {\r\n      setConversation((prev) => [...prev, { role: \"user\", content: message }]);\r\n      setMessage(\"\");\r\n\r\n      let chatBotApi = process.env.REACT_APP_FIREBASE_CHATBOT_API_URL || \"http://localhost:4000/chatbot\";\r\n\r\n      try {\r\n        const response = await axios.post(chatBotApi, {\r\n          userId: user.uid,\r\n          message,\r\n        });\r\n        console.log(response.data);\r\n\r\n        if (response.data.success) {\r\n          setConversation((prev) => [...prev, { role: \"assistant\", content: response.data.message }]);\r\n        } else {\r\n          setConversation((prev) => [...prev, { role: \"error\", content: response.data.message }]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error sending message:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        height={isSmallScreen ? window.innerHeight - 58 : window.innerHeight - 64} // 100svh - 58px --\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        overflow=\"hidden\"\r\n        sx={{ backgroundColor: theme.palette.background.paper }}\r\n      >\r\n        <Header />\r\n        <ConversationArea conversation={conversation} />\r\n        <InputArea message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}