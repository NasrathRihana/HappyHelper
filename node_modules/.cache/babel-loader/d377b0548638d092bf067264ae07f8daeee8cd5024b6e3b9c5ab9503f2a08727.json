{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { interpolatePoints } from \"./utils\";\nconst useDrawing = (color, brushSize) => {\n  _s();\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const drawingHistoryRef = useRef([]);\n  const isDrawingRef = useRef(false);\n  const redoHistoryRef = useRef([]);\n  useEffect(() => {\n    prepareCanvas();\n    const handleKeyDown = e => {\n      if (e.key === \"z\" && e.ctrlKey && e.shiftKey) {\n        e.preventDefault();\n        redo();\n      } else if (e.key === \"z\" && e.ctrlKey) {\n        undo();\n      } else if (e.key === \"s\" && e.ctrlKey) {\n        e.preventDefault();\n        save();\n      } else if (e.key === \"z\" && e.metaKey && e.shiftKey) {\n        e.preventDefault();\n        redo();\n      } else if (e.key === \"z\" && e.metaKey) {\n        undo();\n      } else if (e.key === \"s\" && e.metaKey) {\n        e.preventDefault();\n        save();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth * 0.8;\n    canvas.height = window.innerHeight * 0.8;\n    canvas.style.width = `${window.innerWidth * 0.8}px`;\n    canvas.style.height = `${window.innerHeight * 0.8}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(1, 1);\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n    context.strokeStyle = color;\n    context.lineWidth = brushSize;\n    contextRef.current = context;\n    saveHistory();\n  };\n  const startDrawing = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    isDrawingRef.current = true;\n  };\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    contextRef.current.prevX = null;\n    contextRef.current.prevY = null;\n    isDrawingRef.current = false;\n    saveHistory();\n  };\n  const undo = () => {\n    if (drawingHistoryRef.current.length > 1) {\n      const context = canvasRef.current.getContext(\"2d\");\n      redoHistoryRef.current.push(drawingHistoryRef.current.pop());\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      const image = new Image();\n      image.src = drawingHistoryRef.current[drawingHistoryRef.current.length - 1];\n      image.onload = () => {\n        context.drawImage(image, 0, 0);\n      };\n    }\n  };\n  const redo = () => {\n    if (redoHistoryRef.current.length > 0) {\n      const context = canvasRef.current.getContext(\"2d\");\n      const lastRedo = redoHistoryRef.current.pop();\n      drawingHistoryRef.current.push(lastRedo);\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      const image = new Image();\n      image.src = lastRedo;\n      image.onload = () => {\n        context.drawImage(image, 0, 0);\n      };\n    }\n  };\n  const save = () => {\n    const link = document.createElement(\"a\");\n    link.href = canvasRef.current.toDataURL(\"image/png\");\n    link.download = \"canvas_drawing.png\";\n    link.click();\n  };\n  const draw = e => {\n    if (!isDrawingRef.current) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const prevX = contextRef.current.prevX || offsetX;\n    const prevY = contextRef.current.prevY || offsetY;\n    contextRef.current.prevX = offsetX;\n    contextRef.current.prevY = offsetY;\n    const points = interpolatePoints(prevX, prevY, offsetX, offsetY);\n    points.forEach(point => {\n      contextRef.current.lineTo(point.x, point.y);\n      contextRef.current.stroke();\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(point.x, point.y);\n    });\n  };\n  const saveHistory = () => {\n    drawingHistoryRef.current.push(canvasRef.current.toDataURL());\n  };\n  const handleTouchEvent = e => {\n    e.preventDefault();\n    const touch = e.type === \"touchend\" ? e.changedTouches[0] : e.touches[0];\n    const {\n      pageX,\n      pageY\n    } = touch;\n    const {\n      left,\n      top\n    } = canvasRef.current.getBoundingClientRect();\n    const {\n      scrollTop,\n      scrollLeft\n    } = document.documentElement;\n    const offsetX = pageX - left - scrollLeft;\n    const offsetY = pageY - top - scrollTop;\n    const syntheticEvent = {\n      nativeEvent: {\n        offsetX,\n        offsetY\n      }\n    };\n    if (e.type === \"touchstart\") {\n      startDrawing(syntheticEvent);\n    } else if (e.type === \"touchmove\") {\n      draw(syntheticEvent);\n    } else if (e.type === \"touchend\" || e.type === \"touchcancel\") {\n      finishDrawing();\n    } else if (e.type === \"touchleave\") {\n      finishDrawing();\n    } else if (e.type === \"mousedown\") {\n      startDrawing(syntheticEvent);\n    } else if (e.type === \"mouseup\") {\n      finishDrawing();\n    } else if (e.type === \"mousemove\") {\n      draw(syntheticEvent);\n    } else if (e.type === \"mouseleave\") {\n      finishDrawing();\n    }\n  };\n  const exportCanvasAsJPG = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvasRef.current.width;\n    canvas.height = canvasRef.current.height;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = \"#fff\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.drawImage(canvasRef.current, 0, 0);\n    const link = document.createElement(\"a\");\n    link.href = canvas.toDataURL(\"image/jpeg\");\n    link.download = \"canvas_drawing.jpg\";\n    link.click();\n  };\n  const clearCanvas = () => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  return {\n    canvasRef,\n    contextRef,\n    startDrawing,\n    finishDrawing,\n    draw,\n    handleTouchEvent,\n    exportCanvasAsJPG,\n    clearCanvas,\n    undo,\n    redo,\n    save\n  };\n};\n_s(useDrawing, \"l/yh9KPxLisgDf+J3bka1DQLcPA=\");\nexport default useDrawing;","map":{"version":3,"names":["useRef","useEffect","interpolatePoints","useDrawing","color","brushSize","_s","canvasRef","contextRef","drawingHistoryRef","isDrawingRef","redoHistoryRef","prepareCanvas","handleKeyDown","e","key","ctrlKey","shiftKey","preventDefault","redo","undo","save","metaKey","document","addEventListener","removeEventListener","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","lineCap","lineJoin","strokeStyle","lineWidth","saveHistory","startDrawing","offsetX","offsetY","nativeEvent","beginPath","moveTo","finishDrawing","closePath","prevX","prevY","length","push","pop","clearRect","image","Image","src","onload","drawImage","lastRedo","link","createElement","href","toDataURL","download","click","draw","points","forEach","point","lineTo","x","y","stroke","handleTouchEvent","touch","type","changedTouches","touches","pageX","pageY","left","top","getBoundingClientRect","scrollTop","scrollLeft","documentElement","syntheticEvent","exportCanvasAsJPG","fillStyle","fillRect","clearCanvas"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/DrawingApp/useDrawing.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\r\nimport { interpolatePoints } from \"./utils\";\r\n\r\nconst useDrawing = (color, brushSize) => {\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const drawingHistoryRef = useRef([]);\r\n  const isDrawingRef = useRef(false);\r\n  const redoHistoryRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    prepareCanvas();\r\n\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === \"z\" && e.ctrlKey && e.shiftKey) {\r\n        e.preventDefault();\r\n        redo();\r\n      } else if (e.key === \"z\" && e.ctrlKey) {\r\n        undo();\r\n      } else if (e.key === \"s\" && e.ctrlKey) {\r\n        e.preventDefault();\r\n        save();\r\n      } else if (e.key === \"z\" && e.metaKey && e.shiftKey) {\r\n        e.preventDefault();\r\n        redo();\r\n      } else if (e.key === \"z\" && e.metaKey) {\r\n        undo();\r\n      } else if (e.key === \"s\" && e.metaKey) {\r\n        e.preventDefault();\r\n        save();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const prepareCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = window.innerWidth * 0.8;\r\n    canvas.height = window.innerHeight * 0.8;\r\n    canvas.style.width = `${window.innerWidth * 0.8}px`;\r\n    canvas.style.height = `${window.innerHeight * 0.8}px`;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.scale(1, 1);\r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    context.strokeStyle = color;\r\n    context.lineWidth = brushSize;\r\n    contextRef.current = context;\r\n    saveHistory();\r\n  };\r\n\r\n  const startDrawing = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    isDrawingRef.current = true;\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    contextRef.current.closePath();\r\n    contextRef.current.prevX = null;\r\n    contextRef.current.prevY = null;\r\n    isDrawingRef.current = false;\r\n    saveHistory();\r\n  };\r\n\r\n  const undo = () => {\r\n    if (drawingHistoryRef.current.length > 1) {\r\n      const context = canvasRef.current.getContext(\"2d\");\r\n      redoHistoryRef.current.push(drawingHistoryRef.current.pop());\r\n      context.clearRect(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n      const image = new Image();\r\n      image.src =\r\n        drawingHistoryRef.current[drawingHistoryRef.current.length - 1];\r\n      image.onload = () => {\r\n        context.drawImage(image, 0, 0);\r\n      };\r\n    }\r\n  };\r\n\r\n  const redo = () => {\r\n    if (redoHistoryRef.current.length > 0) {\r\n      const context = canvasRef.current.getContext(\"2d\");\r\n      const lastRedo = redoHistoryRef.current.pop();\r\n      drawingHistoryRef.current.push(lastRedo);\r\n      context.clearRect(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n      const image = new Image();\r\n      image.src = lastRedo;\r\n      image.onload = () => {\r\n        context.drawImage(image, 0, 0);\r\n      };\r\n    }\r\n  };\r\n\r\n  const save = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = canvasRef.current.toDataURL(\"image/png\");\r\n    link.download = \"canvas_drawing.png\";\r\n    link.click();\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawingRef.current) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    const prevX = contextRef.current.prevX || offsetX;\r\n    const prevY = contextRef.current.prevY || offsetY;\r\n    contextRef.current.prevX = offsetX;\r\n    contextRef.current.prevY = offsetY;\r\n\r\n    const points = interpolatePoints(prevX, prevY, offsetX, offsetY);\r\n\r\n    points.forEach((point) => {\r\n      contextRef.current.lineTo(point.x, point.y);\r\n      contextRef.current.stroke();\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(point.x, point.y);\r\n    });\r\n  };\r\n\r\n  const saveHistory = () => {\r\n    drawingHistoryRef.current.push(canvasRef.current.toDataURL());\r\n  };\r\n\r\n  const handleTouchEvent = (e) => {\r\n    e.preventDefault();\r\n    const touch = e.type === \"touchend\" ? e.changedTouches[0] : e.touches[0];\r\n    const { pageX, pageY } = touch;\r\n    const { left, top } = canvasRef.current.getBoundingClientRect();\r\n    const { scrollTop, scrollLeft } = document.documentElement;\r\n    const offsetX = pageX - left - scrollLeft;\r\n    const offsetY = pageY - top - scrollTop;\r\n\r\n    const syntheticEvent = { nativeEvent: { offsetX, offsetY } };\r\n\r\n    if (e.type === \"touchstart\") {\r\n      startDrawing(syntheticEvent);\r\n    } else if (e.type === \"touchmove\") {\r\n      draw(syntheticEvent);\r\n    } else if (e.type === \"touchend\" || e.type === \"touchcancel\") {\r\n      finishDrawing();\r\n    } else if (e.type === \"touchleave\") {\r\n      finishDrawing();\r\n    } else if (e.type === \"mousedown\") {\r\n      startDrawing(syntheticEvent);\r\n    } else if (e.type === \"mouseup\") {\r\n      finishDrawing();\r\n    } else if (e.type === \"mousemove\") {\r\n      draw(syntheticEvent);\r\n    } else if (e.type === \"mouseleave\") {\r\n      finishDrawing();\r\n    }\r\n  };\r\n\r\n  const exportCanvasAsJPG = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = canvasRef.current.width;\r\n    canvas.height = canvasRef.current.height;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.fillStyle = \"#fff\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.drawImage(canvasRef.current, 0, 0);\r\n    const link = document.createElement(\"a\");\r\n    link.href = canvas.toDataURL(\"image/jpeg\");\r\n    link.download = \"canvas_drawing.jpg\";\r\n    link.click();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  };\r\n\r\n  return {\r\n    canvasRef,\r\n    contextRef,\r\n    startDrawing,\r\n    finishDrawing,\r\n    draw,\r\n    handleTouchEvent,\r\n    exportCanvasAsJPG,\r\n    clearCanvas,\r\n    undo,\r\n    redo,\r\n    save,\r\n  };\r\n};\r\n\r\nexport default useDrawing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}