{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bashc\\\\OneDrive\\\\Documents\\\\Kaar Documents\\\\HappyHelperFinal\\\\src\\\\components\\\\Profile\\\\settings\\\\EmailNotificationToggle\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Switch, FormControlLabel, Button, CircularProgress } from \"@mui/material\";\nimport firebase from \"../../../../utils/firebase\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersRef = firebase.firestore().collection(\"users\");\nconst EmailNotificationToggle = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [emailNotifications, setEmailNotifications] = useState(true);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    if (user) {\n      usersRef.doc(user.uid).get().then(doc => {\n        if (doc.exists) {\n          setEmailNotifications(doc.data().emailNotifications);\n        }\n        setLoading(false);\n      });\n    }\n  }, [user]);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    const newEmailNotifications = !emailNotifications;\n    setEmailNotifications(newEmailNotifications);\n    usersRef.doc(user.uid).update({\n      emailNotifications: newEmailNotifications\n    });\n    if (!newEmailNotifications) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: emailNotifications,\n        onChange: handleToggle,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }, this),\n      label: \"Email Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Email Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Email notifications have been turned off for this account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailNotificationToggle, \"mOQIiUSktzhchNkG7Dgf2PdYpt0=\", false, function () {\n  return [useSelector];\n});\n_c = EmailNotificationToggle;\nexport default EmailNotificationToggle;\nvar _c;\n$RefreshReg$(_c, \"EmailNotificationToggle\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Switch","FormControlLabel","Button","CircularProgress","firebase","useSelector","jsxDEV","_jsxDEV","usersRef","firestore","collection","EmailNotificationToggle","_s","loading","setLoading","open","setOpen","emailNotifications","setEmailNotifications","user","state","auth","doc","uid","get","then","exists","data","handleClose","handleToggle","newEmailNotifications","update","fileName","_jsxFileName","lineNumber","columnNumber","children","control","checked","onChange","color","label","onClose","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/Profile/settings/EmailNotificationToggle/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Switch,\r\n  FormControlLabel,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport firebase from \"../../../../utils/firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst usersRef = firebase.firestore().collection(\"users\");\r\n\r\nconst EmailNotificationToggle = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [emailNotifications, setEmailNotifications] = useState(true);\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      usersRef\r\n        .doc(user.uid)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            setEmailNotifications(doc.data().emailNotifications);\r\n          }\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    const newEmailNotifications = !emailNotifications;\r\n    setEmailNotifications(newEmailNotifications);\r\n    usersRef.doc(user.uid).update({ emailNotifications: newEmailNotifications });\r\n\r\n    if (!newEmailNotifications) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControlLabel control={<Switch checked={emailNotifications} onChange={handleToggle} color=\"primary\" />} label=\"Email Notifications\" />\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Email Notifications</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Email notifications have been turned off for this account.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailNotificationToggle;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}