{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport app from \"../../../utils/firebase\";\nexport const supportGroupsSlice = createSlice({\n  name: \"supportGroups\",\n  initialState: {\n    loading: false,\n    groups: [],\n    selectedGroup: null,\n    error: null\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setGroups: (state, action) => {\n      state.groups = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setLoading,\n  setGroups,\n  setError\n} = supportGroupsSlice.actions;\nexport const fetchGroups = () => {\n  return async dispatch => {\n    try {\n      dispatch(setLoading(true));\n      const groupsCollection = app.firestore().collection(\"groups\");\n      const querySnapshot = await groupsCollection.get();\n      const groups = [];\n      querySnapshot.forEach(doc => {\n        groups.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      dispatch(setGroups(groups));\n      dispatch(setLoading(false));\n    } catch (error) {\n      console.error(error);\n      dispatch(setError(error.message));\n      dispatch(setLoading(false));\n    }\n  };\n};\nexport const createGroup = groupData => {\n  return async dispatch => {\n    try {\n      dispatch(setLoading(true));\n      const groupsCollection = app.firestore().collection(\"groups\");\n      await groupsCollection.add(groupData);\n      dispatch(fetchGroups());\n      dispatch(setLoading(false));\n    } catch (error) {\n      console.error(error);\n      dispatch(setLoading(false));\n    }\n  };\n};\nexport const selectGroups = state => state.supportGroups.groups;\nexport default supportGroupsSlice.reducer;","map":{"version":3,"names":["createSlice","app","supportGroupsSlice","name","initialState","loading","groups","selectedGroup","error","reducers","setLoading","state","action","payload","setGroups","setError","actions","fetchGroups","dispatch","groupsCollection","firestore","collection","querySnapshot","get","forEach","doc","push","id","data","console","message","createGroup","groupData","add","selectGroups","supportGroups","reducer"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/store/features/supportGroups/supportGroupsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport app from \"../../../utils/firebase\";\r\n\r\nexport const supportGroupsSlice = createSlice({\r\n  name: \"supportGroups\",\r\n  initialState: {\r\n    loading: false,\r\n    groups: [],\r\n    selectedGroup: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setGroups: (state, action) => {\r\n      state.groups = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoading, setGroups, setError } = supportGroupsSlice.actions;\r\n\r\nexport const fetchGroups = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const groupsCollection = app.firestore().collection(\"groups\");\r\n      const querySnapshot = await groupsCollection.get();\r\n      const groups = [];\r\n      querySnapshot.forEach((doc) => {\r\n        groups.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      dispatch(setGroups(groups));\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setError(error.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createGroup = (groupData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const groupsCollection = app.firestore().collection(\"groups\");\r\n      await groupsCollection.add(groupData);\r\n      dispatch(fetchGroups());\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectGroups = (state) => state.supportGroups.groups;\r\n\r\nexport default supportGroupsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,yBAAyB;AAEzC,OAAO,MAAMC,kBAAkB,GAAGF,WAAW,CAAC;EAC5CG,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,IAAI;IACnBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,SAAS,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEI,SAAS;EAAEC;AAAS,CAAC,GAAGb,kBAAkB,CAACc,OAAO;AAE7E,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACFA,QAAQ,CAACR,UAAU,CAAC,IAAI,CAAC,CAAC;MAC1B,MAAMS,gBAAgB,GAAGlB,GAAG,CAACmB,SAAS,EAAE,CAACC,UAAU,CAAC,QAAQ,CAAC;MAC7D,MAAMC,aAAa,GAAG,MAAMH,gBAAgB,CAACI,GAAG,EAAE;MAClD,MAAMjB,MAAM,GAAG,EAAE;MACjBgB,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC7BnB,MAAM,CAACoB,IAAI,CAAC;UAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;UAAE,GAAGF,GAAG,CAACG,IAAI;QAAG,CAAC,CAAC;MAC5C,CAAC,CAAC;MACFV,QAAQ,CAACJ,SAAS,CAACR,MAAM,CAAC,CAAC;MAC3BY,QAAQ,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdqB,OAAO,CAACrB,KAAK,CAACA,KAAK,CAAC;MACpBU,QAAQ,CAACH,QAAQ,CAACP,KAAK,CAACsB,OAAO,CAAC,CAAC;MACjCZ,QAAQ,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMqB,WAAW,GAAIC,SAAS,IAAK;EACxC,OAAO,MAAOd,QAAQ,IAAK;IACzB,IAAI;MACFA,QAAQ,CAACR,UAAU,CAAC,IAAI,CAAC,CAAC;MAC1B,MAAMS,gBAAgB,GAAGlB,GAAG,CAACmB,SAAS,EAAE,CAACC,UAAU,CAAC,QAAQ,CAAC;MAC7D,MAAMF,gBAAgB,CAACc,GAAG,CAACD,SAAS,CAAC;MACrCd,QAAQ,CAACD,WAAW,EAAE,CAAC;MACvBC,QAAQ,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdqB,OAAO,CAACrB,KAAK,CAACA,KAAK,CAAC;MACpBU,QAAQ,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMwB,YAAY,GAAIvB,KAAK,IAAKA,KAAK,CAACwB,aAAa,CAAC7B,MAAM;AAEjE,eAAeJ,kBAAkB,CAACkC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}