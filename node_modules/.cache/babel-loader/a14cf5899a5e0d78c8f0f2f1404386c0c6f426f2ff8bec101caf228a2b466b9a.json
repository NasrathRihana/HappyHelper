{"ast":null,"code":"import firebase from \"../../../utils/firebase\";\nexport const addHabit = async (uid, habit) => {\n  console.log(\"Habit added\");\n  try {\n    const habitsRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\");\n    const newHabit = {\n      ...habit,\n      createdAt: Date.now()\n    };\n    await habitsRef.add(newHabit);\n    console.log(\"Habit added\");\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getHabits = async uid => {\n  try {\n    const habitsRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\");\n    const habitsSnapshot = await habitsRef.get();\n    const habits = habitsSnapshot.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n    console.log(\"Habits fetched\", habits);\n    return habits;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const updateHabit = async (uid, habitId, updatedData) => {\n  try {\n    let updatedHabit = {\n      name: updatedData\n    };\n    const habitsRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\");\n    const habitRef = habitsRef.doc(habitId);\n    const habitSnapshot = await habitRef.get();\n    if (habitSnapshot.exists) {\n      const newHabit = {\n        ...habitSnapshot.data(),\n        ...updatedHabit\n      };\n      await habitRef.set(newHabit);\n      console.log(\"Habit updated\");\n    } else {\n      console.error(\"Habit not found\");\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteHabit = async (uid, habitId) => {\n  try {\n    console.log(\"Habit deleted\", uid, habitId);\n    const habitRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\").doc(habitId);\n    console.log(\"Habit ref\", habitRef);\n    await habitRef.delete();\n    console.log(\"Habit deleted\");\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const toggleCompletion = async (uid, habitId) => {\n  try {\n    const habitRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\").doc(habitId);\n    const habitSnapshot = await habitRef.get();\n    const isCompleted = habitSnapshot.data().isCompleted;\n    await habitRef.update({\n      isCompleted: !isCompleted\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const maintainHabit = async (uid, habitId) => {\n  try {\n    const habitRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\").doc(habitId);\n    const habitSnapshot = await habitRef.get();\n    const habitData = habitSnapshot.data();\n    const currentDate = new Date().setHours(0, 0, 0, 0);\n    if (!habitData.previousDaysMaintained.includes(currentDate) && currentDate !== habitData.lastMaintained) {\n      const newStreak = currentDate - habitData.lastMaintained === 24 * 60 * 60 * 1000 ? habitData.streak + 1 : 1;\n      await habitRef.update({\n        previousDaysMaintained: [...habitData.previousDaysMaintained, currentDate],\n        streak: newStreak,\n        lastMaintained: currentDate\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const resetStreak = async (uid, habitId) => {\n  try {\n    const habitRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"habits\").doc(habitId);\n    const habitSnapshot = await habitRef.get();\n    const habitData = habitSnapshot.data();\n    const currentDate = new Date().setHours(0, 0, 0, 0);\n    if (currentDate - habitData.lastMaintained > 2 * 24 * 60 * 60 * 1000) {\n      await habitRef.update({\n        streak: 0\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["firebase","addHabit","uid","habit","console","log","habitsRef","firestore","collection","doc","newHabit","createdAt","Date","now","add","error","getHabits","habitsSnapshot","get","habits","docs","map","data","id","updateHabit","habitId","updatedData","updatedHabit","name","habitRef","habitSnapshot","exists","set","deleteHabit","delete","toggleCompletion","isCompleted","update","maintainHabit","habitData","currentDate","setHours","previousDaysMaintained","includes","lastMaintained","newStreak","streak","resetStreak"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/HabitTracker/utils/habits.js"],"sourcesContent":["import firebase from \"../../../utils/firebase\";\r\n\r\nexport const addHabit = async (uid, habit) => {\r\n  console.log(\"Habit added\");\r\n  try {\r\n    const habitsRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\");\r\n    const newHabit = {\r\n      ...habit,\r\n      createdAt: Date.now(),\r\n    };\r\n    await habitsRef.add(newHabit);\r\n    console.log(\"Habit added\");\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getHabits = async (uid) => {\r\n  try {\r\n    const habitsRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\");\r\n    const habitsSnapshot = await habitsRef.get();\r\n    const habits = habitsSnapshot.docs.map((doc) => ({\r\n      ...doc.data(),\r\n      id: doc.id,\r\n    }));\r\n    console.log(\"Habits fetched\", habits);\r\n    return habits;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const updateHabit = async (uid, habitId, updatedData) => {\r\n  try {\r\n    let updatedHabit = { name: updatedData };\r\n    const habitsRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\");\r\n    const habitRef = habitsRef.doc(habitId);\r\n    const habitSnapshot = await habitRef.get();\r\n    if (habitSnapshot.exists) {\r\n      const newHabit = {\r\n        ...habitSnapshot.data(),\r\n        ...updatedHabit,\r\n      };\r\n      await habitRef.set(newHabit);\r\n      console.log(\"Habit updated\");\r\n    } else {\r\n      console.error(\"Habit not found\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const deleteHabit = async (uid, habitId) => {\r\n  try {\r\n    console.log(\"Habit deleted\", uid, habitId);\r\n    const habitRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\")\r\n      .doc(habitId);\r\n    console.log(\"Habit ref\", habitRef);\r\n    await habitRef.delete();\r\n    console.log(\"Habit deleted\");\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const toggleCompletion = async (uid, habitId) => {\r\n  try {\r\n    const habitRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\")\r\n      .doc(habitId);\r\n\r\n    const habitSnapshot = await habitRef.get();\r\n    const isCompleted = habitSnapshot.data().isCompleted;\r\n\r\n    await habitRef.update({ isCompleted: !isCompleted });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const maintainHabit = async (uid, habitId) => {\r\n  try {\r\n    const habitRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\")\r\n      .doc(habitId);\r\n\r\n    const habitSnapshot = await habitRef.get();\r\n    const habitData = habitSnapshot.data();\r\n    const currentDate = new Date().setHours(0, 0, 0, 0);\r\n\r\n    if (\r\n      !habitData.previousDaysMaintained.includes(currentDate) &&\r\n      currentDate !== habitData.lastMaintained\r\n    ) {\r\n      const newStreak =\r\n        currentDate - habitData.lastMaintained === 24 * 60 * 60 * 1000\r\n          ? habitData.streak + 1\r\n          : 1;\r\n\r\n      await habitRef.update({\r\n        previousDaysMaintained: [\r\n          ...habitData.previousDaysMaintained,\r\n          currentDate,\r\n        ],\r\n        streak: newStreak,\r\n        lastMaintained: currentDate,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const resetStreak = async (uid, habitId) => {\r\n  try {\r\n    const habitRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"habits\")\r\n      .doc(habitId);\r\n\r\n    const habitSnapshot = await habitRef.get();\r\n    const habitData = habitSnapshot.data();\r\n    const currentDate = new Date().setHours(0, 0, 0, 0);\r\n\r\n    if (currentDate - habitData.lastMaintained > 2 * 24 * 60 * 60 * 1000) {\r\n      await habitRef.update({\r\n        streak: 0,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}