{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bashc\\\\OneDrive\\\\Documents\\\\Kaar Documents\\\\HappyHelperFinal\\\\src\\\\components\\\\MoodTracker\\\\MoodVisualize\\\\useVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { FormControl, InputLabel, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomTooltip = _ref => {\n  let {\n    active,\n    payload,\n    label\n  } = _ref;\n  const emoticons = [\"😭\", \"😢\", \"😔\", \"😐\", \"🙂\", \"😀\", \"😄\", \"😁\", \"😆\", \"😍\"];\n  if (active && payload && payload.length) {\n    const {\n      date,\n      time,\n      mood\n    } = payload[0].payload;\n    console.log(payload[0].payload);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      style: {\n        backgroundColor: \"#FFFFFF\",\n        padding: \"10px\",\n        border: \"1px solid #CCCCCC\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: `Date: ${date}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: `Time: ${time}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: `Mood: ${emoticons[mood - 1]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nexport function useWindowSize() {\n  _s();\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n_s(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\nconst emoticons = [\"😭\", \"😢\", \"😔\", \"😐\", \"🙂\", \"😀\", \"😄\", \"😁\", \"😆\", \"😍\"];\nexport const yAxisTickFormatter = value => {\n  console.log([value]);\n  return emoticons[value - 1];\n};\nconst filterMoodsByMonthAndYear = (moods, month, year) => {\n  return moods.filter(m => {\n    const moodDate = m.date.toDate();\n    return moodDate.getMonth() + 1 === month && moodDate.getFullYear() === year;\n  });\n};\nconst daysInMonth = (month, year) => {\n  return new Date(year, month, 0).getDate();\n};\nexport const prepareChartData = (moods, month, year) => {\n  const chartData = Array.from({\n    length: daysInMonth(month, year)\n  }, (_, i) => ({\n    date: `${month}/${i + 1}`,\n    mood: null,\n    time: null,\n    count: 0\n  }));\n  filterMoodsByMonthAndYear(moods, month, year).forEach(m => {\n    const moodDate = m.date.toDate();\n    const day = moodDate.getDate();\n    if (chartData[day - 1].mood === null) {\n      chartData[day - 1].mood = m.mood;\n      chartData[day - 1].time = moodDate.toLocaleTimeString();\n      chartData[day - 1].count = 1;\n    } else {\n      chartData[day - 1].mood += m.mood;\n      chartData[day - 1].count += 1;\n    }\n  });\n\n  // Calculate the average mood for each day\n  chartData.forEach(day => {\n    if (day.mood !== null) {\n      day.mood = Math.round(day.mood / day.count);\n    }\n  });\n  return chartData;\n};\nexport const Heading = styled.h2`\n  margin-bottom: 5px;\n  font-size: 28px;\n  font-weight: bold;\n  color: #444;\n\n  @media (min-width: 768px) {\n    margin-bottom: 0;\n    font-size: 36px;\n  }\n`;\nexport const Filters = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 0;\n  align-items: center;\n    justify-content: center;\n`;\nexport const Filter = styled(FormControl)`\n  margin: 1px;\n  @media (min-width: 768px) {\n    margin: ;\n  }\n`;\nexport const Label = styled(InputLabel)`\n  color: #444;\n`;\nvar _c;\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","styled","FormControl","InputLabel","Typography","jsxDEV","_jsxDEV","CustomTooltip","_ref","active","payload","label","emoticons","length","date","time","mood","console","log","className","style","backgroundColor","padding","border","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWindowSize","_s","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","yAxisTickFormatter","value","filterMoodsByMonthAndYear","moods","month","year","filter","m","moodDate","toDate","getMonth","getFullYear","daysInMonth","Date","getDate","prepareChartData","chartData","Array","from","_","i","count","forEach","day","toLocaleTimeString","Math","round","Heading","h2","Filters","div","Filter","Label","$RefreshReg$"],"sources":["C:/Users/bashc/OneDrive/Documents/Kaar Documents/HappyHelperFinal/src/components/MoodTracker/MoodVisualize/useVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FormControl, InputLabel, Typography } from \"@mui/material\";\r\n\r\nexport const CustomTooltip = ({ active, payload, label }) => {\r\n  const emoticons = [\"😭\", \"😢\", \"😔\", \"😐\", \"🙂\", \"😀\", \"😄\", \"😁\", \"😆\", \"😍\"];\r\n  if (active && payload && payload.length) {\r\n    const { date, time, mood } = payload[0].payload;\r\n    console.log(payload[0].payload);\r\n    return (\r\n      <div\r\n        className=\"custom-tooltip\"\r\n        style={{\r\n          backgroundColor: \"#FFFFFF\",\r\n          padding: \"10px\",\r\n          border: \"1px solid #CCCCCC\",\r\n        }}\r\n      >\r\n        <Typography variant=\"body1\">{`Date: ${date}`}</Typography>\r\n        <Typography variant=\"body1\">{`Time: ${time}`}</Typography>\r\n        <Typography variant=\"body1\">{`Mood: ${emoticons[mood - 1]}`}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport function useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\nconst emoticons = [\"😭\", \"😢\", \"😔\", \"😐\", \"🙂\", \"😀\", \"😄\", \"😁\", \"😆\", \"😍\"];\r\n\r\nexport const yAxisTickFormatter = (value) => {\r\n  console.log([value]);\r\n  return emoticons[value - 1];\r\n};\r\n\r\nconst filterMoodsByMonthAndYear = (moods, month, year) => {\r\n  return moods.filter((m) => {\r\n    const moodDate = m.date.toDate();\r\n    return moodDate.getMonth() + 1 === month && moodDate.getFullYear() === year;\r\n  });\r\n};\r\n\r\nconst daysInMonth = (month, year) => {\r\n  return new Date(year, month, 0).getDate();\r\n};\r\n\r\nexport const prepareChartData = (moods, month, year) => {\r\n  const chartData = Array.from({ length: daysInMonth(month, year) }, (_, i) => ({\r\n    date: `${month}/${i + 1}`,\r\n    mood: null,\r\n    time: null,\r\n    count: 0,\r\n  }));\r\n\r\n  filterMoodsByMonthAndYear(moods, month, year).forEach((m) => {\r\n    const moodDate = m.date.toDate();\r\n    const day = moodDate.getDate();\r\n    if (chartData[day - 1].mood === null) {\r\n      chartData[day - 1].mood = m.mood;\r\n      chartData[day - 1].time = moodDate.toLocaleTimeString();\r\n      chartData[day - 1].count = 1;\r\n    } else {\r\n      chartData[day - 1].mood += m.mood;\r\n      chartData[day - 1].count += 1;\r\n    }\r\n  });\r\n\r\n  // Calculate the average mood for each day\r\n  chartData.forEach((day) => {\r\n    if (day.mood !== null) {\r\n      day.mood = Math.round(day.mood / day.count);\r\n    }\r\n  });\r\n\r\n  return chartData;\r\n};\r\n\r\nexport const Heading = styled.h2`\r\n  margin-bottom: 5px;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #444;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 0;\r\n    font-size: 36px;\r\n  }\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 0;\r\n  align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Filter = styled(FormControl)`\r\n  margin: 1px;\r\n  @media (min-width: 768px) {\r\n    margin: ;\r\n  }\r\n`;\r\n\r\nexport const Label = styled(InputLabel)`\r\n  color: #444;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}